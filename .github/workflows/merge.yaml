name: Merge PR

on:
    pull_request:
        types:
            - closed
            - synchronize
        branches:
            - main

concurrency:
    group: merge
    cancel-in-progress: false

jobs:
    # delete-artifacts:
    #     name: Delete artifacts
    #     runs-on: self-hosted-hoprnet-small
    #     #if: github.event.pull_request.merged == true

    #     steps:
    #         - name: Checkout repository
    #           uses: actions/checkout@v4

    #         - name: Setup GCP
    #           id: gcp
    #           uses: hoprnet/hopr-workflows/actions/setup-gcp@master
    #           with:
    #               google-credentials: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}
    #               install-sdk: 'true'

    #         - name: Delete artifacts
    #           run: |
    #             set -x
    #             pr_version=$(grep -E '^version\s*=' Cargo.toml | awk -F\" '{print $2}')-pr.${{ github.event.pull_request.number }}
    #             echo "pr_version=$pr_version" >> Â·GITHUB_OUTPUT
    #             gcloud config set artifacts/location europe-west3
    #             gcloud artifacts versions delete --quiet --repository="rust-binaries" --package=gnosis-vpn ${pr_version}  2> /dev/null || true
    #             gcloud artifacts versions delete --quiet --repository="rust-binaries" --package=gnosis-vpn-ctl ${pr_version}  2> /dev/null || true

    # merge-aarch64-darwin:
    #     name: Publish aarch64-darwin
    #     runs-on: macos-14
    #     needs: delete-artifacts
    #     #if: github.event.pull_request.merged == true

    #     steps:
    #         - name: Checkout repository
    #           uses: actions/checkout@v4

    #         - name: Setup GCP
    #           id: gcp
    #           uses: hoprnet/hopr-workflows/actions/setup-gcp@master
    #           with:
    #               google-credentials: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}
    #               install-sdk: 'true'

    #         - name: Install Nix
    #           uses: cachix/install-nix-action@v29
    #           with:
    #               github_access_token: ${{ secrets.GITHUB_TOKEN }}
    #               nix_path: nixpkgs=channel:nixos-24.05

    #         - uses: cachix/cachix-action@v15
    #           with:
    #               name: hoprnet
    #               authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
    #           env:
    #               USER: runner

    #         - name: Get version
    #           id: vars
    #           run: |
    #             pr_version=$(grep -E '^version\s*=' Cargo.toml | awk -F\" '{print $2}')-pr.${{ github.event.pull_request.number }}
    #             echo "pr_version=$pr_version" >> $GITHUB_OUTPUT

    #         - name: Build gnosis-vpn
    #           run: nix build .#gnosisvpn-aarch64-darwin -L
    #           continue-on-error: true

    #         - name: Publish gnosis-vpn
    #           run: |
    #             echo "Some content" > ./result
    #             cp ./result ./gnosis-vpn-aarch64-darwin
    #             gcloud artifacts generic upload --location=europe-west3 --repository="rust-binaries" --version=${{ steps.vars.outputs.pr_version }} --package=gnosis-vpn --source=./gnosis-vpn-aarch64-darwin

    #         - name: Build gnosis-vpn-ctl
    #           run: nix build .#gnosisvpn-ctl-aarch64-darwin -L
    #           continue-on-error: true

    #         - name: Publish gnosis-vpn-ctl
    #           run: |
    #             echo "Some content" > ./result
    #             cp ./result ./gnosis-vpn-ctl-aarch64-darwin
    #             gcloud artifacts generic upload --location=europe-west3 --repository="rust-binaries" --version=${{ steps.vars.outputs.pr_version }} --package=gnosis-vpn-ctl --source=./gnosis-vpn-ctl-aarch64-darwin

    # merge-x86_64-darwin:
    #     name: Publish x86_64-darwin
    #     runs-on: macos-13
    #     needs: delete-artifacts
    #     #if: github.event.pull_request.merged == true

    #     steps:
    #         - name: Checkout repository
    #           uses: actions/checkout@v4

    #         - name: Setup GCP
    #           id: gcp
    #           uses: hoprnet/hopr-workflows/actions/setup-gcp@master
    #           with:
    #               google-credentials: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}
    #               install-sdk: 'true'

    #         - name: Install Nix
    #           uses: cachix/install-nix-action@v29
    #           with:
    #               github_access_token: ${{ secrets.GITHUB_TOKEN }}
    #               nix_path: nixpkgs=channel:nixos-24.05

    #         - uses: cachix/cachix-action@v15
    #           with:
    #               name: hoprnet
    #               authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
    #           env:
    #               USER: runner

    #         - name: Get version
    #           id: vars
    #           run: |
    #             pr_version=$(grep -E '^version\s*=' Cargo.toml | awk -F\" '{print $2}')-pr.${{ github.event.pull_request.number }}
    #             echo "pr_version=$pr_version" >> $GITHUB_OUTPUT

    #         - name: Build gnosis-vpn
    #           run: nix build .#gnosisvpn-x86_64-darwin -L
    #           continue-on-error: true

    #         - name: Publish gnosis-vpn
    #           run: |
    #             cp ./result ./gnosis-vpn-x86_64-darwin
    #             gcloud artifacts generic upload --location=europe-west3 --repository="rust-binaries" --version=${{ steps.vars.outputs.pr_version }} --package=gnosis-vpn --source=./gnosis-vpn-x86_64-darwin

    #         - name: Build gnosis-vpn-ctl
    #           run: nix build .#gnosisvpn-ctl-x86_64-darwin -L
    #           continue-on-error: true

    #         - name: Publish gnosis-vpn-ctl
    #           run: |
    #             cp ./result ./gnosis-vpn-ctl-x86_64-darwin
    #             gcloud artifacts generic upload --location=europe-west3 --repository="rust-binaries" --version=${{ steps.vars.outputs.pr_version }} --package=gnosis-vpn-ctl --source=./gnosis-vpn-ctl-x86_64-darwin

    merge-linux:
        name: Publish ${{ matrix.architecture }}
        runs-on: self-hosted-hoprnet-big
        # needs: delete-artifacts
        strategy:
            matrix:
                architecture:
                    - x86_64-linux
                    - aarch64-linux
                    - armv7l-linux
        #if: github.event.pull_request.merged == true

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup GCP
              id: gcp
              uses: hoprnet/hopr-workflows/actions/setup-gcp@master
              with:
                  google-credentials: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}
                  install-sdk: 'true'

            - name: Install Nix
              uses: cachix/install-nix-action@v29
              with:
                  github_access_token: ${{ secrets.GITHUB_TOKEN }}
                  nix_path: nixpkgs=channel:nixos-24.05

            - uses: cachix/cachix-action@v15
              with:
                  name: hoprnet
                  authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
              env:
                  USER: runner

            - name: Get version
              id: vars
              run: |
                pr_version=$(grep -E '^version\s*=' Cargo.toml | awk -F\" '{print $2}')-pr.${{ github.event.pull_request.number }}
                echo "pr_version=$pr_version" >> $GITHUB_OUTPUT

            - name: Build gnosis-vpn
              run: nix build .#gnosisvpn-${{ matrix.architecture }} -L

            - name: Publish gnosis-vpn
              run: |
                ls -alR ./result/
                ls -alR ./results/
                cp ./result ./gnosis-vpn-${{ matrix.architecture }}
                gcloud artifacts generic upload --location=europe-west3 --repository="rust-binaries" --version=${{ steps.vars.outputs.pr_version }} --package=gnosis-vpn --source=./gnosis-vpn-${{ matrix.architecture }}

            - name: Build gnosis-vpn-ctl
              run: nix build .#gnosisvpn-ctl-${{ matrix.architecture }} -L

            - name: Publish gnosis-vpn-ctl
              run: |
                cp ./result ./gnosis-vpn-ctl-${{ matrix.architecture }}
                gcloud artifacts generic upload --location=europe-west3 --repository="rust-binaries" --version=${{ steps.vars.outputs.pr_version }} --package=gnosis-vpn-ctl  --source=./gnosis-vpn-ctl-${{ matrix.architecture }}

    comment:
        name: Comment PR
        runs-on: self-hosted-hoprnet-small
        needs:
            # - merge-aarch64-darwin
            # - merge-x86_64-darwin
            - merge-linux
        #if: github.event.pull_request.merged == true

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Get version
              id: vars
              run: |
                set -x
                pr_version=$(grep -E '^version\s*=' Cargo.toml | awk -F\" '{print $2}')-pr.${{ github.event.pull_request.number }}
                echo "pr_version=$pr_version" >> $GITHUB_OUTPUT

            - name: Create comment
              uses: peter-evans/create-or-update-comment@v4
              with:
                issue-number: ${{ github.event.pull_request.number }}
                body: |
                    The binaries for this PR can be downloaded from:
                    ```
                    gcloud artifacts files download --project=hoprassociation --location=europe-west3 --repository=rust-binaries --file=gnosis-vpn:${{ steps.vars.outputs.pr_version }}:gnosis-vpn-aarch64-linux --output=gnosis-vpn
                    gcloud artifacts files download --project=hoprassociation --location=europe-west3 --repository=rust-binaries --file=gnosis-vpn:${{ steps.vars.outputs.pr_version }}:gnosis-vpn-ctl-aarch64-linux --output=gnosis-vpn-ctl

                    gcloud artifacts files download --project=hoprassociation --location=europe-west3 --repository=rust-binaries --file=gnosis-vpn:${{ steps.vars.outputs.pr_version }}:gnosis-vpn-x86_64-linux --output=gnosis-vpn
                    gcloud artifacts files download --project=hoprassociation --location=europe-west3 --repository=rust-binaries --file=gnosis-vpn:${{ steps.vars.outputs.pr_version }}:gnosis-vpn-ctl-x86_64-linux --output=gnosis-vpn-ctl

                    gcloud artifacts files download --project=hoprassociation --location=europe-west3 --repository=rust-binaries --file=gnosis-vpn:${{ steps.vars.outputs.pr_version }}:gnosis-vpn-armv7l-linux --output=gnosis-vpn
                    gcloud artifacts files download --project=hoprassociation --location=europe-west3 --repository=rust-binaries --file=gnosis-vpn:${{ steps.vars.outputs.pr_version }}:gnosis-vpn-ctl-armv7l-linux --output=gnosis-vpn-ctl

                    gcloud artifacts files download --project=hoprassociation --location=europe-west3 --repository=rust-binaries --file=gnosis-vpn:${{ steps.vars.outputs.pr_version }}:gnosis-vpn-aarch64-darwin --output=gnosis-vpn
                    gcloud artifacts files download --project=hoprassociation --location=europe-west3 --repository=rust-binaries --file=gnosis-vpn:${{ steps.vars.outputs.pr_version }}:gnosis-vpn-ctl-aarch64-darwin --output=gnosis-vpn-ctl

                    gcloud artifacts files download --project=hoprassociation --location=europe-west3 --repository=rust-binaries --file=gnosis-vpn:${{ steps.vars.outputs.pr_version }}:gnosis-vpn-x86_64-darwin --output=gnosis-vpn
                    gcloud artifacts files download --project=hoprassociation --location=europe-west3 --repository=rust-binaries --file=gnosis-vpn:${{ steps.vars.outputs.pr_version }}:gnosis-vpn-ctl-x86_64-darwin --output=gnosis-vpn-ctl

                    ```
