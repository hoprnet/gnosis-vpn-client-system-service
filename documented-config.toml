###
# Gnosis VPN service configuration file
#
# On unix the default config path is `/etc/gnosisvpn/config.toml`
# However you can override this by using `GNOSISVPN_CONFIG_PATH` env var
###

# general config file version
version = 1

###
## hoprd node section - your hoprd node that acts as the connection entry point
# [hoprd_node]

# # URL pointing to API access of your node with schema and port (e.g.: `http://123.456.7.89:3002`)
# endpoint = "<hoprd node API endpoint>"

# # API access token
# api_token = "<hoprd node API token>"

# # # [OPTIONAL] internal port - use this if you have a firewall running and only forward a specific port
# # # this is NOT your API port which must be specified in the `endpoint` field
# # # this port is an addiontal port used to establish the tunnel connection on your hoprd node
# # # in general if you want to establish a connection on specific port, just provide this port here
# # internal_connection_port = 50005

###
## connection section - connection configuration parameters
# # copy this section from https://gnosisvpn.com/servers
# [connection]

# # the exit peer id (where the connection should terminate)
# destination = "<exit node peer id>"

# # # [OPTIONAL] internal connection features - defaults to `[ "segmentation" ]`
# # capabilities = [ "segmentation", "retransmission" ]
# # # [OPTIONAL] listen host - specify internal listen host on hoprd node
# # # if you have a firewall running and can only use static ports you need to adjust this setting
# # # it's best to only use `internal_port` of `[hoprd node]` section - if listen_host is enabled `internal_port` is ignored
# # listen_host = ":50005"

###
## [OPTIONAL] connection path section - limit auto pathing of hoprd

# # Caution: only intented for debugging purposes as it degrades security
# [connection.path]
# # [OPTIONAL] hop number of hops to take through the mixnet - defaults to 1
# hop = 1
# # [OPTIONAL] ## specify manual path through the mixnet - only available in debug mode
# intermediates = [ "<intermediate node peer id>" ]

###
## [OPTIONAL] connection target section - where does the exit node connect to

# # this section holds the target information of the connection exit node
# # Caution: leave this as is if you don't know what you're doing
# [connection.target]
# # [OPTIONAL] target host of the connection exit without schema, defaults to localhost wg endpoint
# host = "127.0.0.1"
# # [OPTIONAL] target port of the connection exit, defaults to default wg port
# port = 51820

###
## wireguard section - specific VPN related settings

# # Caution: this section is experimental at best and will only work on Linux
# # this section holds the wireguard specific settings
# [wireguard]
# # local interface IP, onboarding info will provide this
# address = "10.34.0.8/32"
# # wireguard server public peer id - onboarding info will provide this
# server_public_key = "<wg server public peer id>"

# # # [OPTIONAL] determine which traffic will be routed through the VPN
# # # defaults to the smallest subnet derivable from subnet (`x.x.x.0/24`)
# # allowed_ips = "10.34.0.0/24"
# # # [OPTIONAL] private wg key - set this if you want to skip automatic key generation and provide your own private key
# # private_key = "<wg private key>"
# # # [OPTIONAL] preshared server key - if the server provides this, set it here
# # preshared_key = "<wg preshared key>"
